z_payfe03:--z_payfe03

SET QUOTED_IDENTIFIER OFF

declare @t_cno nvarchar(20) = case when '#non' = [1] then '' else [1] end
declare @t_btggno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_etggno nvarchar(20) = case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end
declare @t_worker nvarchar(20) = case when '#non' = '[9]' then CHAR(255) else '[9]' end
------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	tggno nvarchar(20),
	datea nvarchar(10),
	typea nvarchar(10),
	noa nvarchar(20),
	product nvarchar(200),
	unit nvarchar(10),
	mount float,
	weight float,
	price float,
	total float,
	inmoney float,  --進貨金額
	outmoney float, --退貨金額
	tax float,      --稅額
	money float,    --本期應付
	pay float,      --已付金額
	unpay float,    --前期未付
	totalsale float,--應付總計
	counts int      --單據張數
)
insert into @tmp
select 
	'1',ROW_NUMBER()over(partition by a.noa order by a.noa),a.tggno,a.datea,
	case when a.typea = '1' then '進' else '退' end,
	a.noa,b.product,b.unit,b.mount,b.weight,b.price,b.total,
	case when a.typea = '1' then ISNULL(b.total,0) else 0 end,
	case when a.typea = '2' then ISNULL(b.total,0) else 0 end,
	0,0,0,0,0,0
from view_rc2 a
left join view_rc2s b on a.noa = b.noa
where (a.tggno between @t_btggno and @t_etggno) and (a.mon between @t_bmon and @t_emon)
order by a.tggno,a.datea

--數量合計$重量合計&進貨金額&退貨金額&單據張數
insert into @tmp(gno,tggno,mount,weight,inmoney,outmoney,counts)
select '2',tggno,SUM(mount),SUM(weight),SUM(inmoney),SUM(outmoney),COUNT(DISTINCT noa)
from @tmp
group by tggno

--稅額&已付金額
update @tmp set tax=ISNULL(b.tax,0),pay=ISNULL(b.pay,0)
from @tmp a
left join(
	select noa,SUM(ISNULL(tax,0))tax,SUM(ISNULL(pay,0))pay,SUM(ISNULL(unpay,0))unpay
	from tgg_2s 
	where (noa between @t_btggno and @t_etggno) and (mon between @t_bmon and @t_emon)
	group by noa 
)b on tggno = b.noa

--前期未付
update @tmp set unpay=ISNULL(b.unpay,0)
from @tmp a
left join(
	select noa,SUM(ISNULL(unpay,0))unpay
	from tgg_2s 
	where (noa between @t_btggno and @t_etggno) and (mon < @t_bmon)
	group by noa 
)b on tggno = b.noa

--計算本期應付(進貨金額-退貨金額+稅額)
update @tmp set money = inmoney - outmoney + tax where gno = '2'

--計算應付總計(本期應付+前期未付-已付金額)
update @tmp set totalsale = (money + unpay) - pay where gno = '2'

--排版
update @tmp set noa = '',datea = '',typea = '' where gno = '1' and rec > 1

select 
	gno,a.tggno,b.comp comp,b.addr_comp addr,a.datea,a.typea,a.noa,a.product,a.unit,
	dbo.getComma(a.mount,2)mount,
	dbo.getComma(a.weight,2)weight,
	dbo.getComma(a.price,2)price,
	dbo.getComma(a.total,0)total,
	dbo.getComma(a.inmoney,0)inmoney,
	dbo.getComma(a.outmoney,0)outmoney,
	dbo.getComma(a.tax,0)tax,
	dbo.getComma(a.money,0)money,
	dbo.getComma(a.pay,0)pay,
	dbo.getComma(a.unpay,0)unpay,
	dbo.getComma(a.totalsale,0)totalsale,
	a.counts,@t_worker worker
from @tmp a 
left join tgg b on a.tggno = b.noa
order by a.tggno,gno;
--*********************************************************************************
z_payfe02:--z_payfe02

SET QUOTED_IDENTIFIER OFF

declare @t_btggno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_etggno nvarchar(20) = case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end
------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	tggno nvarchar(20),
	unpaydata nvarchar(max),
	unpay float,
	sale float,
	tax float,
	pay float,
	total float
)
insert into @tmp
select
	'1',noa,'',0,
	SUM(case when ISNULL(mon,'') between @t_bmon and @t_emon then ISNULL(sale,0) else 0 end),
	SUM(case when ISNULL(mon,'') between @t_bmon and @t_emon then ISNULL(tax, 0) else 0 end),
	SUM(case when ISNULL(mon,'') between @t_bmon and @t_emon then ISNULL(pay, 0) else 0 end),0
from tgg_2s 
where (noa between @t_btggno and @t_etggno) and 
	  ((mon between @t_bmon and @t_emon) or (ISNULL(mon,'') < @t_bmon and isnull(unpay,0) != 0))
group by noa

--前期未付明細
declare @tggno nvarchar(20)
declare @str nvarchar(max)
declare @mon nvarchar(20)
declare @unpay float
declare @line int

declare cursor_table1 cursor for 
select tggno from @tmp
open cursor_table1
fetch next from cursor_table1
into @tggno
while(@@FETCH_STATUS <> -1) 
begin
	set @str = ''
	set @line = 0
	
	declare cursor_table2 cursor for 
	select mon,unpay from tgg_2s where noa = @tggno and mon < @t_bmon and unpay !=0
	open cursor_table2
	fetch next from cursor_table2 
	into @mon,@unpay
	while(@@FETCH_STATUS <> -1) 
	begin
		set @line = @line + 1
		set @str = @str + @mon +'：<a style="color:darkblue'+CHAR(59)+'">'+dbo.getComma(@unpay,0)+'</a>' +'&nbsp&nbsp&nbsp' 
		
		if(@line%3 = 0)
			set @str = @str + '<br>'
		
		fetch next from cursor_table2 
		into @mon,@unpay
	end 
	close cursor_table2
	deallocate cursor_table2
	
	update @tmp set unpaydata = @str where tggno = @tggno
	
	fetch next from cursor_table1
	into @tggno
end 
close cursor_table1
deallocate cursor_table1

--前期未付金額
update @tmp set unpay = ISNULL(b.unpay,0)
from @tmp a
left join (
	select noa,SUM(isnull(unpay,0))unpay from tgg_2s where mon < @t_bmon group by noa
)b on a.tggno = b.noa

--應付總計(前期未付+本期進貨+稅額-已付金額)
update @tmp set total = unpay + sale + tax - pay

--總計
insert into @tmp(gno,unpay,sale,tax,pay,total)
select '2',SUM(unpay),SUM(sale),SUM(tax),SUM(pay),SUM(total) from @tmp 

select 
	a.*,b.nick nick,
	dbo.getComma(a.sale ,0) mny1,
	dbo.getComma(a.tax  ,0) mny2,
	dbo.getComma(a.pay  ,0) mny3,
	dbo.getComma(a.total,0) mny4,
	dbo.getComma(a.unpay,0) mny5
from @tmp a
left join tgg b on a.tggno = b.noa
order by gno,a.tggno;
--********************************************************************************
z_payfe01:--z_payfe01

SET QUOTED_IDENTIFIER OFF

declare @t_cno nvarchar(20) = case when '#non' = [1] then '' else [1] end
declare @t_btggno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_etggno nvarchar(20) = case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bdate nvarchar(20) = case when '#non' = [4] then '' else [4] end
declare @t_edate nvarchar(20) = case when '#non' = [5] then CHAR(255) else [5] end
----------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	noa nvarchar(30),
	tggno nvarchar(10),
	comp nvarchar(90),
	datea nvarchar(10),
	acc2 nvarchar(40),
	money float,
	checkno nvarchar(32),
	bank nvarchar(32),
	indate nvarchar(10),
	opay float, --預付
	mopay float --預付餘額
)
insert into @tmp
select '1',ROW_NUMBER() over (partition by a.tggno,a.noa order by a.noa),a.noa,a.tggno,a.comp,a.datea,b.acc2,b.money,b.checkno,b.bank,b.indate,a.opay,''
from pay a
left join pays b on a.noa = b.noa 
where isnull(b.money,0)!=0 and (len(@t_cno)=0 or b.cno=@t_cno) and
	  (a.tggno between @t_btggno and @t_etggno) and (a.datea between @t_bdate and @t_edate)
	  
--預付餘額
update @tmp set mopay = b.mopay
from @tmp a
left join(
	select tggno,SUM(opay-unopay) mopay
	from pay
	where (datea <= @t_edate) and (tggno between @t_btggno and @t_etggno)
	group by tggno
)b on a.tggno = b.tggno 

--排版
update @tmp set gno = '2' 
from @tmp a
left join(
	select noa,MAX(rec) rec from @tmp group by noa
)b on a.noa = b.noa 
where a.rec = b.rec

update @tmp set datea = '',opay = null,mopay = null where rec > 1
update @tmp set opay  = case when opay  = 0 then null else opay  end,
				mopay = case when mopay = 0 then null else mopay end 

insert into @tmp(gno,noa,tggno,rec,money)
select '3',MAX(noa),tggno,MAX(rec),SUM(money) from @tmp group by tggno

select * from @tmp order by tggno,noa,rec,gno;