z_ummfe06:--z_ummfe06
	SET QUOTED_IDENTIFIER OFF
	declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
	declare @t_ecustno nvarchar(20) =case when '#non' = [3] then CHAR(255) else [3] end
	declare @t_mon nvarchar(20) = case when '#non' = [11] then '' else [11] end
	declare @t_option nvarchar(max) = case when '#non' = [12] then '' else [12] end
	----------------------------------------------------------------------------------------
		declare @bbmon nvarchar(20)
	begin try
		set @bbmon =  left(dbo.AD2ChineseEraName(dateadd(MM,-2,dbo.ChineseEraName2AD(@t_mon+'/01'))),6)
	end try
	begin catch
	
	end catch

	declare @tmp table(
		custno nvarchar(20),
		
		unpay1 float,--出貨未收
		unpay2 float,--出貨呆帳
		
		acccmoney1 float,--會計應收  1123d
		acccmoney2 float,--會計預收  2131
		acccmoney3 float,--會計呆帳  8144
		
		opay float,--出貨預收
		
		pay float,
		unpay float
	)
	
	insert into @tmp (custno,unpay1,unpay2)
	select noa
	,sum(case when mon>=@bbmon then unpay else 0 end)
	,sum(case when mon<@bbmon then unpay else 0 end)
	from cust_2s
	where noa between @t_bcustno and @t_ecustno
	group by noa
	---------------------------------------------------------------------------------------------------
	declare @tmpa table(
		tablea nvarchar(20),
		accy nvarchar(20),
		yy nvarchar(20)
	)
	
	insert into @tmpa(tablea,accy,yy)
	SELECT TABLE_NAME 
	,replace(TABLE_NAME,'accc','')
	,substring(replace(TABLE_NAME,'accc',''),1,CHARINDEX('_',replace(TABLE_NAME,'accc',''))-1)
	FROM INFORMATION_SCHEMA.TABLES 
	where TABLE_NAME like 'accc[0-9][0-9][0-9]%' 

	-------------------------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_ummfe06')is not null
	BEGIN
		drop table #z_ummfe06
	END
	create table #z_ummfe06(
		custno nvarchar(20),
		acc1a nvarchar(20), --會計應收  1123
		acc1b nvarchar(20),--會計預收  2131
		acc1c nvarchar(20)--會計呆帳  8144
	)
	insert into #z_ummfe06(custno,acc1a,acc1b,acc1c)
	select noa
		,case when len(isnull(uacc1,''))=0 then '1123.'+noa else uacc1 end
		,'2131.'+noa
		,'8144.'+noa
	from cust 
	where noa between @t_bcustno and @t_ecustno
	-------------------------------------------------------------------------------------------------
	declare @cmd nvarchar(max) 
	declare @tablea nvarchar(20)
	declare @accy nvarchar(20)
	declare @yy nvarchar(20)

	declare cursor_table cursor for
	select tablea,accy,yy from @tmpa where yy= left(@t_mon,3)
	open cursor_table
	fetch next from cursor_table
	into @tablea,@accy,@yy
	while(@@FETCH_STATUS <> -1)
	begin		
		set @cmd =
		"select case when c.custno is not null then c.custno 
			when d.custno is not null then d.custno
			else e.custno end
		,SUM(case when c.custno is null then 0 else ISNULL(b.dmoney,0)-ISNULL(b.cmoney,0)end)
		,SUM(case when d.custno is null then 0 else ISNULL(b.cmoney,0)-ISNULL(b.dmoney,0)end)
		,SUM(case when e.custno is null then 0 else ISNULL(b.dmoney,0)-ISNULL(b.cmoney,0)end)
		from accc"+@accy+" a
		left join acccs"+@accy+" b on a.accc3=b.accc3 
		left join #z_ummfe06 c on b.accc5=c.acc1a
		left join #z_ummfe06 d on b.accc5=d.acc1b
		left join #z_ummfe06 e on b.accc5=e.acc1c
		where left(@yy+'/'+a.accc2,6) <= @t_mon
		and (c.custno is not null or d.custno is not null or e.custno is not null)
		group by case when c.custno is not null then c.custno 
			when d.custno is not null then d.custno
			else e.custno end"
		
		insert into @tmp(custno,acccmoney1,acccmoney3,acccmoney2)
		execute sp_executesql @cmd,N'@t_mon nvarchar(20),@yy nvarchar(20)'
			,@t_mon=@t_mon,@yy=@yy
			
		fetch next from cursor_table
		into @tablea,@accy,@yy
	end
	close cursor_table
	deallocate cursor_table
	
	drop table #z_ummfe06
	-------------------------------------------------------------------------------------------------
	insert into @tmp(custno,opay)
	select a.custno,SUM(isnull(b.[money],0)-ISNULL(b.paysale,0))
	from umm a
	left join umms b on a.noa=b.noa
	where a.custno between @t_bcustno and @t_ecustno
	and a.datea<=@t_mon
	group by a.custno
	-------------------------------------------------------------------------------------------------
	declare @result table(
		gno nvarchar(20),
		rec1 int,
		rec2 int,
		custno nvarchar(20),
		nick nvarchar(20),
		salesno nvarchar(20),
		sales nvarchar(30),
		unpay1 float,
		unpay2 float,
		acccmoney1 float,
		acccmoney2 float,
		diff1 float,
		opay float,
		acccopay float,
		diff2 float,
		diff3 float
	)
	insert into @result(gno,rec1,rec2,custno,nick,salesno,sales,unpay1,unpay2,acccmoney1,acccmoney2,diff1,opay,acccopay,diff2,diff3)
	select '2'
	--	,case when CHARINDEX('業務',@t_option)>0 then ROW_NUMBER()over(order by isnull(b.salesno,''),a.custno)
	--		else ROW_NUMBER()over(order by a.custno) end
		,ROW_NUMBER()over(order by a.custno)
		,0
		,a.custno
		,isnull(b.nick,'')
		,ISNULL(b.salesno,'')
		,ISNULL(b.sales,'')
		,SUM(ISNULL(a.unpay1,0))
		,SUM(ISNULL(a.unpay2,0))
		,SUM(ISNULL(a.acccmoney1,0))
		,SUM(ISNULL(a.acccmoney2,0))
		,SUM(ISNULL(a.unpay1,0)+ISNULL(a.unpay2,0)-ISNULL(a.acccmoney1,0)-ISNULL(a.acccmoney2,0))
		,SUM(ISNULL(a.opay,0))
		,SUM(ISNULL(a.acccmoney3,0))
		,SUM(ISNULL(a.opay,0)-ISNULL(a.acccmoney3,0))
		,0
	from @tmp a
	left join cust b on a.custno=b.noa
	group by a.custno
		,isnull(b.nick,'')
		,ISNULL(b.salesno,'')
		,ISNULL(b.sales,'')
	having not(SUM(ISNULL(a.unpay1,0))=0
		and SUM(ISNULL(a.unpay2,0))=0
		and SUM(ISNULL(a.acccmoney1,0))=0
		and SUM(ISNULL(a.acccmoney2,0))=0
		and SUM(ISNULL(a.opay,0))=0
		and SUM(ISNULL(a.acccmoney3,0))=0)
		
	update @result set diff3 = (unpay1+unpay2)-opay
		
	if CHARINDEX('異常',@t_option)>0
	begin
		delete @result where diff1=0 and diff2=0
	end
	if CHARINDEX('出貨-預收+',@t_option)>0
	begin
		delete @result where diff3<0
	end
	if CHARINDEX('出貨-預收-',@t_option)>0
	begin
		delete @result where diff3>=0
	end
	----------------------------------------------------------------------------------------------
	insert into @result(gno,rec1,unpay1,unpay2,acccmoney1,acccmoney2,diff1,opay,acccopay,diff2,diff3)
	select '4',999999999,sum(unpay1),sum(unpay2),sum(acccmoney1),sum(acccmoney2),sum(diff1),sum(opay),sum(acccopay),sum(diff2),sum(diff3)
	from @result where gno = '2'
	
	insert into @result(gno,rec2,salesno,sales,unpay1,unpay2,acccmoney1,acccmoney2,diff1,opay,acccopay,diff2,diff3)
	select '6',ROW_NUMBER()over(order by salesno),salesno,sales,SUM(unpay1),SUM(unpay2),SUM(acccmoney1),SUM(acccmoney2),SUM(diff1),SUM(opay),SUM(acccopay),SUM(diff2),sum(diff3)
	from @result where gno = '2'
	group by salesno,sales
	
	insert into @result(gno,rec2,unpay1,unpay2,acccmoney1,acccmoney2,diff1,opay,acccopay,diff2,diff3)
	select '8',999999999,SUM(unpay1),SUM(unpay2),SUM(acccmoney1),SUM(acccmoney2),SUM(diff1),SUM(opay),SUM(acccopay),SUM(diff2),sum(diff3)
	from @result where gno = '6'
	
	declare @rec1 int
	declare @rec2 int
	declare @i1 int = 40
	declare @i2 int = 40

	declare cursor_table cursor for 
	select rec1,rec2 from @result where gno = '2' or gno = '6'
	open cursor_table
	fetch next from cursor_table 
	into @rec1,@rec2
	while(@@FETCH_STATUS <> -1) 
	begin
		if(@rec1%40=0)
		begin
			insert into @result(gno,rec1)
			select '3',@rec1
			insert into @result(gno,rec1)
			select '1',@rec1+1
		end
		if(@rec2!=0 and @rec2%40=0)
		begin
			insert into @result(gno,rec2)
			select '7',@rec2
			insert into @result(gno,rec2)
			select '5',@rec2+1
		end

		fetch next from cursor_table 
		into @rec1,@rec2
	end 
	close cursor_table 
	deallocate cursor_table 
	
	if(CHARINDEX('業務',@t_option)>0)
	begin
		delete @result where gno = '1' or gno = '2' or gno = '3' or gno = '4'
		
		insert into @result(gno)
		select '5'
		
		select '帳款月份'+@t_mon mon,gno,rec2,custno,nick,salesno,sales,
			   dbo.getComma(unpay1,0)unpay1,dbo.getComma(unpay2,0)unpay2,dbo.getComma(acccmoney1,0)acccmoney1,dbo.getComma(acccmoney2,0)acccmoney2,dbo.getComma(diff1,0)diff1,
			   dbo.getComma(opay,0)opay,dbo.getComma(acccopay,0)acccopay,dbo.getComma(diff2,0)diff2,dbo.getComma(diff3,0)diff3
		from @result order by rec2,gno,salesno
	end
	else
	begin
		delete @result where gno = '5' or gno = '6' or gno = '7' or gno = '8'
		
		insert into @result(gno)
		select '1'
		
		select '帳款月份'+@t_mon mon,gno,rec1,custno,nick,salesno,sales,
			   dbo.getComma(unpay1,0)unpay1,dbo.getComma(unpay2,0)unpay2,dbo.getComma(acccmoney1,0)acccmoney1,dbo.getComma(acccmoney2,0)acccmoney2,dbo.getComma(diff1,0)diff1,
			   dbo.getComma(opay,0)opay,dbo.getComma(acccopay,0)acccopay,dbo.getComma(diff2,0)diff2,dbo.getComma(diff3,0)diff3
		from @result order by rec1,gno,custno
	end;
	
	
	
--*******************************************************************************
z_ummfe05:--z_ummfe05
	SET QUOTED_IDENTIFIER OFF
	declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
	declare @t_ecustno nvarchar(20) =case when '#non' = [3] then CHAR(255) else [3] end
	declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
	declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end	
	----------------------------------------------------------------------------------------
	declare @tmp table(
		custno nvarchar(20),
		
		vccmoney float,
		vcctax float,
		vcctotal float,
		
		vccamoney float,
		vccatax float,
		vccatotal float,
		vccamount float,
		
		acccmoney float,
		
		pay float,
		unpay float
	)
	
	insert into @tmp(custno,vccmoney,vcctax,vcctotal)
	select isnull(a.custno,'')
		,sum(isnull(a.[money],0)*case when a.typea='1' then 1 else -1 end)
		,sum(isnull(a.[tax],0)*case when a.typea='1' then 1 else -1 end)
		,sum(isnull(a.[total],0)*case when a.typea='1' then 1 else -1 end)
	from view_vcc a
	where isnull(a.custno,'') between @t_bcustno and @t_ecustno
	and ISNULL(a.mon,'') between @t_bmon and @t_emon
	group by isnull(a.custno,'')
	-------------------------------------------------------------------------------------------------
	insert into @tmp(custno,vccamoney,vccatax,vccatotal)
	select isnull(a.custno,''),sum(isnull(a.[money],0)),sum(isnull(a.[tax],0)),sum(isnull(a.[total],0))
	from vcca a
	where isnull(a.custno,'') between @t_bcustno and @t_ecustno
	and ISNULL(a.mon,'') between @t_bmon and @t_emon
	group by isnull(a.custno,'')
	
	insert into @tmp(custno,vccamount)
	select isnull(a.custno,''),SUM(isnull(b.mount,0))
	from vcca a
	left join vccas b on a.noa=b.noa
	where isnull(a.custno,'') between @t_bcustno and @t_ecustno
	and ISNULL(a.mon,'') between @t_bmon and @t_emon
	group by isnull(a.custno,'')
	-------------------------------------------------------------------------------------------------
	declare @tmpa table(
		tablea nvarchar(20),
		accy nvarchar(20),
		yy nvarchar(20)
	)
	
	insert into @tmpa(tablea,accy,yy)
	SELECT TABLE_NAME 
	,replace(TABLE_NAME,'accc','')
	,substring(replace(TABLE_NAME,'accc',''),1,CHARINDEX('_',replace(TABLE_NAME,'accc',''))-1)
	FROM INFORMATION_SCHEMA.TABLES 
	where TABLE_NAME like 'accc[0-9][0-9][0-9]%' 

	-------------------------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_ummfe05')is not null
	BEGIN
		drop table #z_ummfe05
	END
	create table #z_ummfe05(
		custno nvarchar(20),
		uacc1 nvarchar(20)
	)
	insert into #z_ummfe05(custno,uacc1)
	select a.custno,case when len(isnull(b.uacc1,''))=0 then '1123.'+a.custno else b.uacc1 end
	from (select custno from @tmp where len(custno)>0 group by custno) a
	left join cust b on a.custno=b.noa
	where B.noa between @t_bcustno and @t_ecustno
	
	-------------------------------------------------------------------------------------------------
	declare @cmd nvarchar(max) 
	declare @tablea nvarchar(20)
	declare @accy nvarchar(20)
	declare @yy nvarchar(20)

	declare cursor_table cursor for
	select tablea,accy,yy from @tmpa
	open cursor_table
	fetch next from cursor_table
	into @tablea,@accy,@yy
	while(@@FETCH_STATUS <> -1)
	begin		
		set @cmd =
		"select c.custno,SUM(ISNULL(b.dmoney,0)-ISNULL(b.cmoney,0))
		from accc"+@accy+" a
		left join acccs"+@accy+" b on a.accc3=b.accc3 
		left join #z_ummfe05 c on b.accc5=c.uacc1
		where left(@yy+'/'+a.accc2,6) between @t_bmon and @t_emon
		and c.custno is not null
		group by c.custno"
		
		insert into @tmp(custno,acccmoney)
		execute sp_executesql @cmd,N'@t_bmon nvarchar(20),@t_emon nvarchar(20),@yy nvarchar(20)'
			,@t_bmon=@t_bmon,@t_emon=@t_emon,@yy=@yy
			
		fetch next from cursor_table
		into @tablea,@accy,@yy
	end
	close cursor_table
	deallocate cursor_table
	
	drop table #z_ummfe05
	-------------------------------------------------------------------------------------------------
	insert into @tmp(custno,pay,unpay)
	select noa,SUM(ISNULL(pay,0)),SUM(ISNULL(unpay,0))
	from cust_2s
	where noa between @t_bcustno and @t_ecustno
	and mon between @t_bmon and @t_emon
	group by noa
	-------------------------------------------------------------------------------------------------
	declare @tmpc table(
		gno nvarchar(20),
		recno int,
		custno nvarchar(20),
		nick nvarchar(20),
		vccmoney float,
		vcctax float,
		vcctotal float,
		vccamoney float,
		vccatax float,
		vccatotal float,
		vccamount float,
		acccmoney float,
		pay float,
		unpay float
	)
	
	insert into @tmpc(gno,recno,custno,nick
		,vccmoney,vcctax,vcctotal,vccamoney,vccatax,vccatotal,vccamount,acccmoney
		,pay,unpay)
	select '1',row_number()over(order by a.custno),a.custno,b.nick,SUM(ISNULL(a.vccmoney,0)),SUM(ISNULL(a.vcctax,0)),SUM(ISNULL(a.vcctotal,0))
		,SUM(ISNULL(a.vccamoney,0)),SUM(ISNULL(a.vccatax,0)),SUM(ISNULL(a.vccatotal,0)),SUM(ISNULL(a.vccamount,0))
		,SUM(ISNULL(acccmoney,0))
		,SUM(ISNULL(a.pay,0)),SUM(ISNULL(a.unpay,0))
	from @tmp a
	left join cust b on a.custno=b.noa
	where len(a.custno)>0
	group by a.custno,b.nick
	
	insert into @tmpc(gno,custno
		,vccmoney,vcctax,vcctotal,vccamoney,vccatax,vccatotal,vccamount,acccmoney
		,pay,unpay) 
	select '2',CHAR(255),SUM(ISNULL(a.vccmoney,0)),SUM(ISNULL(a.vcctax,0)),SUM(ISNULL(a.vcctotal,0))
		,SUM(ISNULL(a.vccamoney,0)),SUM(ISNULL(a.vccatax,0)),SUM(ISNULL(a.vccatotal,0)),SUM(ISNULL(a.vccamount,0))
		,SUM(ISNULL(acccmoney,0))
		,SUM(ISNULL(a.pay,0)),SUM(ISNULL(a.unpay,0))
	from @tmpc a

	select recno rr
		,custno a01
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+nick+'</a>' a02
		,dbo.getComma(vccmoney,0) a03
		,dbo.getComma(vccamoney,0) a04
		,dbo.getComma(vccatax,0) a05
		,dbo.getComma(vccmoney-vccamoney,0) a06
		,dbo.getComma(round((vccmoney-vccamoney)*0.05,0),0) a07
		,dbo.getComma(acccmoney,0) a08
		,dbo.getComma(vccmoney-acccmoney,0) a09
		,dbo.getComma(pay,0) a10
		,dbo.getComma(unpay,0) a11
		,* 
	from @tmpc 
	order by custno;
	
	
	
--*******************************************************************************
z_ummfe04:--z_ummfe04
	SET QUOTED_IDENTIFIER OFF

	--declare @t_cno nvarchar(20) = case when '#non' = [1] then '' else [1] end
	declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
	declare @t_ecustno nvarchar(20) =case when '#non' = [3] then CHAR(255) else [3] end
	declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
	declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end		
	----------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		custno nvarchar(50),
		cust nvarchar(100),
		nick nvarchar(100),
		salesno nvarchar(50),
		sales nvarchar(100),
		discount float
	)
	insert into @tmp(gno,custno,discount)
	select '1',ISNULL(a.custno,''),sum(isnull(b.[money],0))
	from umm a
	left join umms b on a.noa=b.noa
	where LEFT(b.acc1,4)='4107'
	and isnull(a.mon,'') between @t_bmon and @t_emon
	and ISNULL(a.custno,'') between @t_bcustno and @t_ecustno
	group by ISNULL(a.custno,'')
	
	insert into @tmp(gno,discount)
	select '2',SUM(ISNULL(discount,0))
	from @tmp
	
	update @tmp set cust=b.comp,nick=b.nick,salesno=b.salesno,sales=b.sales
	from @tmp a
	left join cust b on a.custno=b.noa
	
	select custno a01
		,cust a02
		,sales a03
		,dbo.getComma(discount,0) a04
		,* 
	from @tmp order by gno,custno;
--*******************************************************************************
z_ummfe03:--z_ummfe03

SET QUOTED_IDENTIFIER OFF

declare @t_cno nvarchar(20) = case when '#non' = [1] then '' else [1] end
declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_ecustno nvarchar(20) =case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end	
declare @t_bdate nvarchar(20) = case when '#non' = [9] then '' else [9] end
declare @t_edate nvarchar(20) = case when '#non' = [10] then CHAR(255) else [10] end
declare @t_worker nvarchar(20) = case when '#non' = '[14]' then '' else '[14]' end
declare @t_bzdate nvarchar(20) = case when '#non' = [15] then '' else [15] end
declare @t_ezdate nvarchar(20) = case when '#non' = [16] then CHAR(255) else [16] end
	declare @curdate nvarchar(max) = convert(nvarchar,getDate(),120)
	---------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(1),
		rno int,
		rec int,
		custno nvarchar(30),
		comp nvarchar(100),
		addr nvarchar(100),
		tel nvarchar(100),
		
		datea nvarchar(10),
		typea nvarchar(10),
		noa nvarchar(20),
		stotal float,
		product nvarchar(200),
		unit nvarchar(8),
		mount float,
		price float,
		mtotal float,
		
		slmoney float,
		bkmoney float,
		tax float,
		money float,
		pay float,
		unpay float,
		total float,
		
		counts float,
		weight float,
		-----------------------
		dateb nvarchar(10),
		acc2 nvarchar(50),
		moneyb float,
		checkno nvarchar(40),
		bank nvarchar(60),
		indate nvarchar(10)
	)
	insert into @tmp(gno,rno,rec,custno,comp,addr,tel,datea,typea,noa,stotal,product,unit,mount,price,mtotal,slmoney,bkmoney,tax)
	select 
		'2',ROW_NUMBER()over(partition by a.custno order by a.noa),ROW_NUMBER()over(partition by a.noa order by a.noa),
		a.custno,a.comp,a.addr,a.tel,a.datea,
		case when a.typea = '1' then '出' else '退' end,
		a.noa,a.total,b.product,b.unit,b.mount,b.price,b.total,
		case when a.typea = '1' then ISNULL(b.total,0) else 0 end,
		case when a.typea = '2' then ISNULL(b.total,0) else 0 end,
		case when ROW_NUMBER()over(partition by a.noa order by a.noa)=1 then ISNULL(a.tax,0) else 0 end
	from view_vcc a
	left join view_vccs b on a.noa = b.noa
	where (len(@t_cno)=0 or a.cno=@t_cno) and (a.custno between @t_bcustno and @t_ecustno) and
 		  (a.mon between @t_bmon and @t_emon) and (a.datea between @t_bzdate and @t_ezdate)

	update @tmp set tax = case when typea = '出' then tax else -1*tax end

	--出貨金額&退貨金額&稅額&單據張數
	insert into @tmp(gno,rno,custno,slmoney,bkmoney,tax,counts)
	select '3',MAX(rno),custno,SUM(slmoney),SUM(bkmoney),SUM(tax),COUNT(DISTINCT noa)
	from @tmp 
	group by custno

	--重量合計
	update @tmp set weight = b.mount
	from @tmp a
	left join(	
		select custno,SUM(mount)mount
		from @tmp
		where gno = '2' and UPPER(unit) = 'KG'
		group by custno
	)b on a.custno = b.custno
	where gno = '3'

	--已付金額&前期未付
	update @tmp set pay = ISNULL(b.pay,0),unpay = ISNULL(b.unpay,0)
	from @tmp a
	left join(	
		select noa,SUM(case when mon between @t_bmon and @t_emon then 1 else 0 end *pay)pay,SUM(unpay)unpay
		from cust_2s
		where (noa between @t_bcustno and @t_ecustno) and(mon < @t_bmon)
		group by noa
	)b on a.custno = b.noa
	where gno = '3'


	--本期應收(出貨金額+退貨金額+稅額)
	update @tmp set money = slmoney - bkmoney +tax 

	--應收總計(本期應收+前期未收-已付金額)
	update @tmp set total = money + unpay - pay 
	---------------------------------------------------------------------------------
	if LEN(@t_bdate)>0 and LEN(@t_edate)>0
	begin
		insert into @tmp(gno,rno,custno,comp,dateb,acc2,moneyb,checkno,bank,indate)
		select '6',ROW_NUMBER()over(partition by a.custno order by a.noa),a.custno,comp,a.datea,b.acc2,b.money,b.checkno,b.bank,b.indate
		from umm a
		left join umms b on a.noa=b.noa
		where a.datea between @t_bdate and @t_edate and ISNULL(a.custno,'') between @t_bcustno and @t_ecustno and isnull(b.money,0)!=0
	end
	---------------------------------------------------------------------------------
	--排版&換頁
	update @tmp set datea='',typea='',noa='',stotal=null where rec > 1

	declare @custno nvarchar(30)
	declare @cnt1 int
	declare @cnt2 int 
	declare @max  int
	declare @min  int
	declare @i int

	declare cursor_table cursor for 
	select custno from @tmp group by custno
	open cursor_table 
	fetch next from cursor_table 
	into @custno
	while(@@FETCH_STATUS <> -1) 
	begin
		set @cnt1 = (select COUNT(*) from @tmp where gno = '2' and custno = @custno)
		set @cnt2 = (select COUNT(*) from @tmp where gno = '6' and custno = @custno)
		
		set @max = case when @cnt1 > 0 then (select MAX(rno) from @tmp where gno = '2' and custno = @custno) else 0 end
		update @tmp set rno = rno+@max+12 where gno = '6' and custno = @custno
		
		print @custno
		print @max
		
		if(@cnt1+7+@cnt2 <= 40)
		begin
			if(@cnt1 > 0)
			begin
				set @min = (select MIN(rno) from @tmp where gno = '2' and custno = @custno)
				
				insert into @tmp(gno,rno,custno)
				select '1',@min,@custno 
			end	
			if(@cnt2 > 0) 
			begin
				set @min = (select MIN(rno) from @tmp where gno = '6' and custno = @custno)
			
				insert into @tmp(gno,rno,custno,comp)
				select '5',@min,@custno,comp from @tmp where gno = '6' and rno = @min and custno = @custno
			end
			set @max = (select MAX(rno) from @tmp where (gno = '2' or gno = '6') and custno = @custno)	
			
			insert into @tmp(gno,rno,custno)
			select '7',@max,@custno 	
		end
		else
		begin
			if(@cnt1 > 0)
			begin
				insert into @tmp(gno,rno,custno)
				select '1',case when rno = 1 then 1 else rno+1 end,@custno from @tmp where gno = '2' and (rno = 1 or rno%40 = 0) and custno = @custno
				insert into @tmp(gno,rno,custno)
				select '4',rno,@custno from @tmp where gno = '2' and rno%40 = 0 and custno = @custno
			end	
			if(@cnt2 > 0)
			begin
				set @min = (select MIN(rno) from @tmp where gno = '6' and custno = @custno)
			
				insert into @tmp(gno,rno,custno,comp)
				select '5',case when rno = @min then @min else rno+1 end,@custno,comp from @tmp where gno = '6' and (rno = @min or rno%40 = 0) and custno = @custno
				
				set @max = (select MAx(rno) from @tmp where gno = '6' and custno = @custno)
				insert into @tmp(gno,rno,custno)
				select '7',rno,@custno from @tmp where gno = '6' and (rno%40 = 0 or rno = @max) and custno = @custno
			end
		end

		fetch next from cursor_table 
		into @custno
	end 
	close cursor_table 
	deallocate cursor_table

	update @tmp set comp=b.comp,addr=b.addr_comp,tel=b.tel
	from @tmp a
	left join cust b on a.custno=b.noa

	select 
		*
		,dbo.AD2ChineseEraName(@curdate) xcurdate
		,case when @t_bmon='' and @t_emon=CHAR(255) 
			then '帳款日期：'+@t_bzdate+'~'+case when @t_ezdate=CHAR(255) then '' else @t_ezdate end 
			else '帳款月份：'+@t_bmon+'~'+case when @t_emon=CHAR(255) then '' else @t_emon end end b2edate,
		@t_bdate+'~'+case when @t_edate=CHAR(255) then '' else @t_edate end b2edateb,
		@t_worker worker,
		dbo.getComma(stotal,0)sttl,
		dbo.getComma(mount,2)mnt,
		dbo.getComma(price,2)prc,
		dbo.getComma(mtotal,0)mttl,
		dbo.getComma(slmoney,0)mny1,
		dbo.getComma(bkmoney,0)mny2,
		dbo.getComma(tax,0)mny3,
		dbo.getComma(money,0)mny4,
		dbo.getComma(unpay,0)mny5,
		dbo.getComma(pay,0)mny6,
		dbo.getComma(total,0)mny7,
		dbo.getComma(weight,0)wei
	from @tmp order by custno,rno,gno;
--*******************************************************************************
z_ummfe02:--z_ummfe02

SET QUOTED_IDENTIFIER OFF
	
declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_ecustno nvarchar(20) = case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bmon nvarchar(20) = case when '#non' = [6] then '' else [6] end
declare @t_emon nvarchar(20) = case when '#non' = [7] then CHAR(255) else [7] end
declare @t_bsssno nvarchar(20) = case when '#non' = [17] then '' else [17] end
declare @t_esssno nvarchar(20) = case when '#non' = [18] then CHAR(255) else [18] end
declare @t_option nvarchar(max) = case when '#non' = [19] then '' else [19] end
--前2個月
declare @b2mon nvarchar(max) = LEFT(dbo.AD2ChineseEraName(CONVERT(char, DATEADD(MONTH,-2,dbo.ChineseEraName2AD(@t_bmon+'/01')), 111)),6)
---------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	custno nvarchar(20),
	nick nvarchar(90),
	salesno nvarchar(20),
	sales nvarchar(30), 
	unpaydata nvarchar(max), --前2個月(ex:@t_bmon='104/09 @b2mon=104/07,104/08')
	unpay float,
	bdmoney float, --呆帳(前3個月以前 ex:@t_bmon='104/09 '' ~ 104/06)
	sale float,    --銷售金額
	tax float,     --稅額
	pay float,     --已收金額
	total float    --應收總計
)
insert into @tmp
select
	'2',ROW_NUMBER()over(order by a.noa),a.noa,b.nick,'','','',0,0,
	SUM(case when ISNULL(a.mon,'') between @t_bmon and @t_emon then ISNULL(a.sale,0) else 0 end),
	SUM(case when ISNULL(a.mon,'') between @t_bmon and @t_emon then ISNULL(a.tax ,0) else 0 end),
	SUM(case when ISNULL(a.mon,'') between @t_bmon and @t_emon then ISNULL(a.pay ,0) else 0 end),0
from cust_2s a
left join cust b on a.noa = b.noa
where (a.noa between @t_bcustno and @t_ecustno) and 
	  ((a.mon between @t_bmon and @t_emon) or (ISNULL(a.mon,'') < @t_bmon and ISNULL(a.unpay,0) != 0))
group by a.noa,b.nick

--業務
update @tmp set salesno = b.salesno,sales = b.sales
from @tmp a
left join (
	select noa,salesno,sales
	from cust
)b on a.custno = b.noa

--前期未收明細
declare @custno nvarchar(20)
declare @str nvarchar(max)
declare @mon nvarchar(20)
declare @unpay float
declare @line int

declare cursor_table1 cursor for 
select custno from @tmp
open cursor_table1
fetch next from cursor_table1
into @custno
while(@@FETCH_STATUS <> -1) 
begin
	set @str = ''
	set @line = 0
	
	declare cursor_table2 cursor for 
	select mon,unpay from cust_2s where noa = @custno and (mon >= @b2mon and mon < @t_bmon) and unpay !=0
	open cursor_table2
	fetch next from cursor_table2 
	into @mon,@unpay
	while(@@FETCH_STATUS <> -1) 
	begin
		set @line = @line + 1
		set @str = @str + RIGHT(@mon,2) + '月' +'：<a style="color:darkblue'+CHAR(59)+'">'+dbo.getComma(@unpay,0)+'</a>' +'&nbsp&nbsp&nbsp' 
		
		fetch next from cursor_table2 
		into @mon,@unpay
	end 
	close cursor_table2
	deallocate cursor_table2
	
	update @tmp set unpaydata = @str where custno = @custno
	
	fetch next from cursor_table1
	into @custno
end 
close cursor_table1
deallocate cursor_table1

--前期未收金額
update @tmp set unpay = ISNULL(b.unpay,0)
from @tmp a
left join (
	select noa,SUM(isnull(unpay,0))unpay 
	from cust_2s 
	where (mon >= @b2mon and mon < @t_bmon) 
	group by noa
)b on a.custno = b.noa

--呆帳
update @tmp set bdmoney = ISNULL(b.unpay,0)
from @tmp a
left join (
	select noa,SUM(isnull(unpay,0))unpay 
	from cust_2s 
	where mon < @b2mon 
	group by noa
)b on a.custno = b.noa

--應付總計(前期未付+呆帳+銷售金額+稅額-已付金額)
update @tmp set total = unpay + bdmoney + sale + tax - pay

--總計
insert into @tmp(gno,rec,unpay,bdmoney,sale,tax,pay,total)
select '3',MAX(rec),SUM(unpay),SUM(bdmoney),SUM(sale),SUM(tax),SUM(pay),SUM(total) 
from @tmp where gno = '2'

declare @max int = (select MAX(rec) from @tmp where gno = '2')

if(CHARINDEX('業務',@t_option) > 0)
begin
	insert into @tmp(gno,salesno,sales,bdmoney,sale,tax,pay,total)
	select '6',ISNULL(salesno,''),ISNULL(sales,''),SUM(bdmoney),SUM(sale),SUM(tax),SUM(pay),SUM(total) 
	from @tmp 
	where gno = '2'
	group by ISNULL(salesno,''),ISNULL(sales,'')
	
	update @tmp set rec = b.rec 
	from @tmp a
	left join (
		select salesno,ROW_NUMBER()over(order by salesno) rec 
		from @tmp 
		where gno = '6'
	)b
	on a.salesno = b.salesno
	
	insert into @tmp(gno,rec,unpay,bdmoney,sale,tax,pay,total)
	select '7',MAX(rec),SUM(unpay),SUM(bdmoney),SUM(sale),SUM(tax),SUM(pay),SUM(total) 
	from @tmp where gno = '6'

	set @max = (select MAX(rec) from @tmp where gno = '6')
	
	delete @tmp where gno = '2' or gno = '3'
end

--換頁
if(CHARINDEX('業務',@t_option) > 0)
begin
insert into @tmp(gno,rec)
	select '5',1
	insert into @tmp(gno,rec)
	select '5',rec+1 from @tmp where rec % 40 = 0 and rec != @max
	insert into @tmp(gno,rec)
	select '8',rec   from @tmp where rec % 40 = 0 and rec != @max
end
else
begin
	insert into @tmp(gno,rec)
	select '1',1
	insert into @tmp(gno,rec)
	select '1',rec+1 from @tmp where rec % 40 = 0 and rec != @max
	insert into @tmp(gno,rec)
	select '4',rec   from @tmp where rec % 40 = 0 and rec != @max
end

select 
	gno,rec,custno,nick,salesno,sales,unpaydata,
	dbo.getComma(unpay  ,0)mny1,
	dbo.getComma(bdmoney,0)mny2,
	dbo.getComma(sale   ,0)mny3,
	dbo.getComma(tax    ,0)mny4,
	dbo.getComma(pay    ,0)mny5,
	dbo.getComma(total  ,0)mny6	
from @tmp order by rec,gno;
--*******************************************************************************
z_ummfe01:--z_ummfe01
SET QUOTED_IDENTIFIER OFF

declare @t_bcustno nvarchar(20) = case when '#non' = [2] then '' else [2] end
declare @t_ecustno nvarchar(20) =case when '#non' = [3] then CHAR(255) else [3] end
declare @t_bdate nvarchar(20) = case when '#non' = [4] then '' else [4] end
declare @t_edate nvarchar(20) = case when '#non' = [5] then CHAR(255) else [5] end
---------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	custno nvarchar(25),
	comp nvarchar(90),
	noa nvarchar(35),
	datea nvarchar(10),
	acc2 nvarchar(50),
	money float,
	checkno nvarchar(40),
	bank nvarchar(60),
	indate nvarchar(10),
	opay float, --預收
	mopay float --預收餘額
)
insert into @tmp
select
	'2',ROW_NUMBER()over(partition by a.noa order by a.noa),a.custno,c.comp,a.noa,a.datea,b.acc2,b.money,b.checkno,b.bank,b.indate,
	case when opay =0 then -1 * ISNULL(unopay,0) else ISNULL(opay,0) end,0
from umm a
left join umms b on a.noa = b.noa
left join cust c on a.custno = c.noa
where (LEN(b.acc1)>0) and (a.datea between @t_bdate and @t_edate) and (a.custno between @t_bcustno and @t_ecustno) 

--前期累積預收
insert into @tmp(gno,custno,comp,mopay)
select '1',a.custno,c.comp,0
from umm a
left join cust c on a.custno = c.noa
where EXISTS(select * from @tmp b where a.custno = b.custno)
group by a.custno,c.comp

update @tmp set opay = ISNULL(B.opay,0),mopay = ISNULL(B.opay,0)
from @tmp A
left join (
	select custno,SUM(opay - unopay) opay
	from umm a
	where EXISTS(select * from @tmp b where a.custno = b.custno)and(a.datea < @t_bdate)
	group by a.custno
)B on A.custno = B.custno
where gno = '1'

--計算預收餘額
declare @custno nvarchar(25)
declare @xcustno nvarchar(25) = 'xxxxxx'
declare	@noa nvarchar(35)
declare @opay float
declare @b4pay float

declare cursor_table cursor for 
select custno,noa,opay from @tmp where rec = '1' order by custno,noa
open cursor_table 
fetch next from cursor_table 
into @custno,@noa,@opay
while(@@FETCH_STATUS <> -1) 
begin
	if(@custno != @xcustno)
	begin
		set @b4pay = (select opay from @tmp where gno = '1' and custno = @custno)
	end
	
	update @tmp set mopay = @b4pay + @opay where noa = @noa
	set @b4pay = @b4pay + @opay
	
	set @xcustno = @custno

	fetch next from cursor_table 
	into @custno,@noa,@opay
end 
close cursor_table 
deallocate cursor_table 

insert into @tmp(gno,custno,noa,money)
select '4',custno,'zzzzzzzzzzz',SUM(money) from @tmp where gno = '2' group by custno

--排版
delete @tmp where gno = '1' and opay = 0

update @tmp set datea = '' where rec > 1

update @tmp set gno = '3' 
from @tmp a 
left join(
	select noa,MAX(rec)rec from @tmp where gno = '2' group by noa
)b on a.noa = b.noa and a.rec = b.rec 
where a.noa = b.noa and a.rec = b.rec 

select 
	*,
	dbo.getComma(money,0)mny1,
	dbo.getComma(opay ,0)mny2,
	dbo.getComma(mopay,0)mny3 
from @tmp order by custno,noa;